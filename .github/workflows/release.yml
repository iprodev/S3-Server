name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
  
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        BINARY_NAME=S3-Server-${{ matrix.goos }}-${{ matrix.goarch }}
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        go mod tidy
        go mod download
        CGO_ENABLED=0 go build -ldflags="-s -w" -o ${BINARY_NAME} ./cmd/s3_server

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: S3-Server-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./S3-Server-${{ matrix.goos }}-${{ matrix.goarch }}
        overwrite: true

    - name: Upload files to GH release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file: S3-Server-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_name: S3-Server-${{ matrix.goos }}-${{ matrix.goarch }}
        overwrite: true
        prerelease: true